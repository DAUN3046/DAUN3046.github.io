---
title: "[동물병원 프로젝트 1차 리팩토링] 일단 1000줄은 너무 했으니까 좀 줄이자"
excerpt: "내가 봐도 너무 길었다."

categories:
  - FE
tags:
  - [FE, Project, TypeScript, React, Node.js]

<!-- permalink: /FE/animal-hospital-refactor-1/ -->

toc: true
toc_sticky: true
 
date: 2022-07-26
---

# 1차 리팩토링 과정
## 해결해야 될 과제
프로젝트 발표와 수료식까지 쉴 틈없이 달려왔다. 하지만 기간에 비해 볼륨이 큰 프로젝트여서 모든 기능을 다 구현하지는 못했고, 부족한 점이 많이 많이 남아있다.

그래서 리팩토링을 하기로 했다. 우선 눈에 띄는 부분들은 다음과 같다.

![image](https://user-images.githubusercontent.com/49031232/180969520-5b8762ac-7e0b-4879-88f5-13004493ada4.png)

> 내 페이지에 기능이 많으니까 `주소 찾기`나 `새 비밀번호 설정`처럼 다른 페이지와 공통된 기능은 나중에 참고해서 추가하면 시간이 절약되겠지?

라고 생각했으나...

어림도 없었다!

분명 코딩 규칙에서 커밋 컨벤션 네이밍 컨벤션을 나름 엄격하게 짰음에도 내용물을 뜯어보니 코드가 호환이 안됐다. 

왜냐하면 페이지들마다 백과 프론트의 담당이 모두 달랐는데 각자의 코딩 방식을 터치하지 않다보니 내가 담당한 페이지는 쿠키를 쓰고,
다른 분이 담당한 페이지는 쿠키를 쓰지 않고 헤더를 작성해야 되고 모델과 스키마부터 각 페이지가 조금씩 형태가 달라 코드를 짜는 구조부터 달랐다.

그래서 내 페이지의 고유 기능부터 구현하다가 이후에 보니 주소 추가나 비밀번호 확인 등에 있어서 코드를 완전히 다시 짜야 되어서 당황했었다.

이제 남은 기능들을 마저 구현해야 될 때다.

하지만 우선 기능 추가에 앞서 거슬리는 점이 하나 있었으니...

## 코드의 가독성이 떨어진다
다른 페이지들이 길어야 300라인 정도지만 내가 맡았던 병원 정보 페이지는 약 950라인에 달했다.
~~3동안 이 페이지에만 갇혀있었던 이유 (엄연히 따지면 중간까진 펫 정보 페이지도 작업했지만 병원 페이지가 너무 오래걸려서 중간에 팀원이 인계받아 작업을 마무리해줬다)~~

![image](https://user-images.githubusercontent.com/49031232/180968939-d52dbaac-9af5-4f77-8d9e-d77cbe53bb37.png)

